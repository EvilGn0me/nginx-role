---
# tasks file for nginx
- name: Load a variable file based on the OS type.
  include_vars: '{{ item }}'
  with_first_found:
    - '{{ ansible_distribution|lower }}.yml'
    - '{{ ansible_os_family|lower }}.yml'

- name: pre-requisites tasks
  import_tasks: redhat.yml
  when: ansible_os_family|lower == 'redhat'

- name: pre-requisites tasks
  import_tasks: debian.yml
  when: ansible_os_family|lower == 'debian'

- name: zabbix agent tasks
  import_tasks: zabbix.yml
  when: zabbix_url is defined

- name: manage user for nginx
  user:
    name: '{{ nginx_conf.user }}'
    shell: '{{ nginx_conf.user_shell }}'
    state: present

- cron:
    name: 'certbot renew'
    minute: '0'
    hour: '0'
    user: root
    job: '/usr/bin/certbot renew'

- name: remove default nginx config
  file:
    path: /etc/nginx/conf.d/default.conf
    state: absent

- name: generate ssl certificates
  shell: bash -lc 'certbot certonly --standalone -n --agree-tos --email postmaster@{{ item.value.hostname }} --domains {{ item.value.hostname }} --pre-hook "systemctl stop nginx" --post-hook "systemctl start nginx"'
  when: item.value.ssl == True
  with_dict:
    '{{ nginx_conf.sites }}'

- name: create directory for sites
  file:
    path: '/var/www/{{ item.value.hostname }}'
    owner: '{{ nginx_conf.user }}'
    group: '{{ nginx_conf.user }}'
    state: directory
  when: item.value.wordpress == True
  with_dict:
    '{{ nginx_conf.sites }}'

- name: manage sites config
  template:
    src: templates/site_template.conf
    dest: /etc/nginx/conf.d/{{ item.value.hostname }}.conf
    owner: '{{ nginx_conf.user }}'
    group: '{{ nginx_conf.user }}'
    mode: 0644
  with_dict:
    '{{ nginx_conf.sites }}'
  notify:
    - nginx restart

- name: manage nginx config
  template:
    src: templates/nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: '{{ nginx_conf.user }}'
    group: '{{ nginx_conf.user }}'
    mode: 0644
  notify:
    - nginx restart
